// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzeria.Persistence;

#nullable disable

namespace Pizzeria.Persistence.Migrations
{
    [DbContext(typeof(PizzeriaDbContext))]
    partial class PizzeriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AdditionalIngredientSinglePizzaOrder", b =>
                {
                    b.Property<int>("AdditionalIngredientsAdditionalIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("SinglePizzaOrdersSinglePizzaOrderId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalIngredientsAdditionalIngredientId", "SinglePizzaOrdersSinglePizzaOrderId");

                    b.HasIndex("SinglePizzaOrdersSinglePizzaOrderId");

                    b.ToTable("AdditionalIngredientSinglePizzaOrder", (string)null);
                });

            modelBuilder.Entity("BaseIngredientPizza", b =>
                {
                    b.Property<int>("BaseIngredientsBaseIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PizzasPizzaId")
                        .HasColumnType("int");

                    b.HasKey("BaseIngredientsBaseIngredientId", "PizzasPizzaId");

                    b.HasIndex("PizzasPizzaId");

                    b.ToTable("BaseIngredientPizza", (string)null);
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.AdditionalIngredient", b =>
                {
                    b.Property<int>("AdditionalIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdditionalIngredientId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AdditionalIngredientId");

                    b.ToTable("AdditionalIngredients", (string)null);

                    b.HasData(
                        new
                        {
                            AdditionalIngredientId = 1,
                            Name = "Kiełbasa",
                            Price = 7m
                        },
                        new
                        {
                            AdditionalIngredientId = 2,
                            Name = "Rukola",
                            Price = 4m
                        });
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"), 1L, 1);

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.BaseIngredient", b =>
                {
                    b.Property<int>("BaseIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaseIngredientId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaseIngredientId");

                    b.ToTable("BaseIngredients", (string)null);

                    b.HasData(
                        new
                        {
                            BaseIngredientId = 1,
                            Name = "Sos pomidorowy"
                        },
                        new
                        {
                            BaseIngredientId = 2,
                            Name = "Ser"
                        },
                        new
                        {
                            BaseIngredientId = 3,
                            Name = "Szynka"
                        },
                        new
                        {
                            BaseIngredientId = 4,
                            Name = "Pieczarki"
                        });
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryAddressAddressId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.HasKey("OrderId");

                    b.HasIndex("DeliveryAddressAddressId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PizzaId");

                    b.ToTable("Pizzas", (string)null);

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            Description = "Przyszna pizza z szynką",
                            IsAvailable = true,
                            Name = "Vesuviana",
                            Price = 25.50m
                        },
                        new
                        {
                            PizzaId = 2,
                            Description = "Pyszna pizza z szynką i pieczarkami",
                            IsAvailable = true,
                            Name = "Capricciosa",
                            Price = 28m
                        });
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.SinglePizzaOrder", b =>
                {
                    b.Property<int>("SinglePizzaOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SinglePizzaOrderId"), 1L, 1);

                    b.Property<decimal>("CurrentPizzaPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("SinglePizzaOrderId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("SinglePizzaOrders", (string)null);
                });

            modelBuilder.Entity("AdditionalIngredientSinglePizzaOrder", b =>
                {
                    b.HasOne("Pizzeria.Domain.Entities.AdditionalIngredient", null)
                        .WithMany()
                        .HasForeignKey("AdditionalIngredientsAdditionalIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria.Domain.Entities.SinglePizzaOrder", null)
                        .WithMany()
                        .HasForeignKey("SinglePizzaOrdersSinglePizzaOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BaseIngredientPizza", b =>
                {
                    b.HasOne("Pizzeria.Domain.Entities.BaseIngredient", null)
                        .WithMany()
                        .HasForeignKey("BaseIngredientsBaseIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pizzeria.Domain.Entities.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzasPizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.Order", b =>
                {
                    b.HasOne("Pizzeria.Domain.Entities.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.SinglePizzaOrder", b =>
                {
                    b.HasOne("Pizzeria.Domain.Entities.Order", null)
                        .WithMany("SinglePizzaOrders")
                        .HasForeignKey("OrderId");

                    b.HasOne("Pizzeria.Domain.Entities.Pizza", "Pizza")
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Pizzeria.Domain.Entities.Order", b =>
                {
                    b.Navigation("SinglePizzaOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
